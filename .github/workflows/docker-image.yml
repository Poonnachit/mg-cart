name: ci

on:
  push:
    branches:
      - develop
      - main
    tags:
      - "*-RELEASE"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64,linux/arm64/v8

      - name: Set short SHA
        id: set_sha
        run: |
          short=$(echo $GITHUB_SHA | cut -c 1-7)
          echo "short_sha=$short" >> $GITHUB_OUTPUT


      - name: Build and push
        if: github.ref == 'refs/heads/develop'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: docker.io/poonnachitdevops/mg-app:develop-${{steps.set_sha.outputs.short_sha}}

      - name: Build and push
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: docker.io/poonnachitdevops/mg-app:sut-${{steps.set_sha.outputs.short_sha}}

      - name: Build and push
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: docker.io/poonnachitdevops/mg-app:production-${{steps.set_sha.outputs.short_sha}}


  update-gitops:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:  
      - name: Set short SHA
        id: set_sha
        run: |
          short=$(echo $GITHUB_SHA | cut -c 1-7)
          echo "short_sha=$short" >> $GITHUB_OUTPUT

      - name: Update GitOps
        if: github.ref == 'refs/heads/develop'
        run: |
          git clone https://update-gitops:${{ secrets.PAT }}@github.com/Poonnachit/mg-nod-prod-manifest.git
          cd mg-nod-prod-manifest
          yq -i '.image.tag="develop-${{steps.set_sha.outputs.short_sha}}"' develop/pedjeab/mg-cart/values.yml
          git config --global user.email "poonnachit.devops@myorder.ai"
          git config --global user.name "Poonanchit"
          git commit -m "update image tag to mg-app to develop-${{steps.set_sha.outputs.short_sha}}" develop/pedjeab/mg-cart/values.yml --allow-empty
          git push origin main
      - name: Update GitOps
        if: github.ref == 'refs/heads/main'
        run: |
          git clone https://update-gitops:${{ secrets.PAT }}@github.com/Poonnachit/mg-nod-prod-manifest.git
          cd mg-nod-prod-manifest
          yq -i '.image.tag="sut-${{steps.set_sha.outputs.short_sha}}"' sut/pedjeab/mg-cart/values.yml
          git config --global user.email "poonnachit.devops@myorder.ai"
          git config --global user.name "Poonanchit"
          git commit -m "update image tag to mg-app to sut-${{steps.set_sha.outputs.short_sha}}" sut/pedjeab/mg-cart/values.yml --allow-empty
          git push origin main
      - name: Update GitOps
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git clone https://update-gitops:${{ secrets.PAT }}@github.com/Poonnachit/mg-nod-prod-manifest.git
          cd mg-nod-prod-manifest
          yq -i '.image.tag="production-${{steps.set_sha.outputs.short_sha}}"' production/pedjeab/mg-cart/values.yml
          git config --global user.email "poonnachit.devops@myorder.ai"
          git config --global user.name "Poonanchit"
          git commit -m "update image tag to mg-app to production-${{steps.set_sha.outputs.short_sha}}" production/pedjeab/mg-cart/values.yml --allow-empty
          git push origin main


        
